<!DOCTYPE html>
<html lang="pt-BR">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Tabela de Campeonatos PUBG</title>
</head>
<body>
    <h1 style="text-align: center;">Ranking de Duplas - PUBG</h1>
    <div id="tabelas" style="margin: 20px; display: flex; justify-content: space-around;">
        <div id="tabelaGeral" style="width: 45%; border: 1px solid #ccc; padding: 10px;">
            <h2 style="text-align: center;">Tabela Geral</h2>
            <table style="width: 100%; border-collapse: collapse;">
                <thead>
                    <tr>
                        <th style="border: 1px solid #000;">Posição</th>
                        <th style="border: 1px solid #000;">Dupla</th>
                        <th style="border: 1px solid #000;">Kills</th>
                        <th style="border: 1px solid #000;">Pontos Totais</th>
                    </tr>
                </thead>
                <tbody id="corpoTabelaGeral">
                    <!-- Os dados da tabela geral serão preenchidos aqui -->
                </tbody>
            </table>
        </div>
        <div id="tabelaRodadas" style="width: 45%; border: 1px solid #ccc; padding: 10px;">
            <h2 style="text-align: center;">Tabela de Rodadas</h2>
            <div id="navegacaoRodadas" style="text-align: center; margin-bottom: 10px;">
                <button id="btnAnterior" style="padding: 5px 10px;">&lt; Anterior</button>
                <button id="btnProximo" style="padding: 5px 10px;">Próximo &gt;</button>
            </div>
            <div id="tabelasRodadas"></div>
        </div>
    </div>
    <div id="mensagem" style="color: red; text-align: center;"></div>

    <script>
        let rodadasData = [];
        let rodadaAtual = 0; // Inicializa o índice da rodada atual

        document.addEventListener("DOMContentLoaded", function () {
            const timestamp = new Date().getTime();
            const url = `dados/dados.json?ts=${timestamp}`; // Adiciona o timestamp na URL

            fetch(url)
                .then(response => {
                    if (!response.ok) {
                        throw new Error('Erro ao carregar os dados.');
                    }
                    return response.json();
                })
                .then(data => {
                    rodadasData = data.rodadas; // Armazena as rodadas
                    carregarTabelas(data);
                    rodadaAtual = rodadasData.length - 1; // Começa pela rodada mais recente
                    mostrarRodada(rodadaAtual); // Mostra a rodada mais recente
                })
                .catch(error => {
                    console.error(error);
                    document.getElementById("mensagem").innerText = "Erro ao carregar os dados. Por favor, verifique o arquivo JSON.";
                });
        });

        function carregarTabelas(data) {
            const pontuacoes = calcularPontuacoes(data);
            preencherTabelaGeral(pontuacoes);
        }

        function calcularPontuacoes(data) {
            const pontuacoes = {};
            data.rodadas.forEach(rodada => {
                rodada.ranking.forEach(dupla => {
                    const nomeDupla = dupla.dupla;
                    const kills = dupla.kills;
                    const posicao = dupla.posicao;

                    // Calcula os pontos da colocação
                    const pontosColocacao = calcularPontosPorColocacao(posicao);

                    // Calcula os pontos totais
                    const totalPontos = (kills || 0) + pontosColocacao;

                    // Se a dupla ainda não está no objeto de pontuações, inicializa
                    if (!pontuacoes[nomeDupla]) {
                        pontuacoes[nomeDupla] = {
                            kills: 0,
                            totalPontos: 0,
                            posicoes: []
                        };
                    }

                    // Adiciona kills e pontos
                    pontuacoes[nomeDupla].kills += kills;
                    pontuacoes[nomeDupla].totalPontos += totalPontos;
                    pontuacoes[nomeDupla].posicoes.push(posicao);
                });
            });

            return pontuacoes;
        }

        function calcularPontosPorColocacao(posicao) {
            switch (posicao) {
                case 1: return 10;
                case 2: return 8;
                case 3: return 6;
                case 4: return 4;
                case 5: return 2;
                default: return 0;
            }
        }

        function preencherTabelaGeral(pontuacoes) {
            const tbody = document.getElementById("corpoTabelaGeral");
            tbody.innerHTML = ""; // Limpa o conteúdo anterior

            // Ordena as duplas por pontos totais
            const duplasOrdenadas = Object.entries(pontuacoes)
                .sort((a, b) => b[1].totalPontos - a[1].totalPontos);

            // Preenche a tabela
            duplasOrdenadas.forEach(([dupla, info], index) => {
                const row = document.createElement("tr");
                row.innerHTML = `
                    <td style="border: 1px solid #000;">${index + 1}</td>
                    <td style="border: 1px solid #000;">${dupla}</td>
                    <td style="border: 1px solid #000;">${info.kills}</td>
                    <td style="border: 1px solid #000;">${info.totalPontos}</td>
                `;
                tbody.appendChild(row);
            });
        }

        function mostrarRodada(index) {
            const tabelaRodadas = document.getElementById("tabelasRodadas");
            tabelaRodadas.innerHTML = ""; // Limpa o conteúdo anterior

            const rodada = rodadasData[index];
            const divRodada = document.createElement("div");
            divRodada.style.margin = "10px 0";
            divRodada.innerHTML = `<h3>${rodada.nome} - ${rodada.mapa}</h3>`;
            
            const table = document.createElement("table");
            table.style.width = "100%";
            table.style.borderCollapse = "collapse";
            table.innerHTML = `
                <thead>
                    <tr>
                        <th style="border: 1px solid #000;">Posição</th>
                        <th style="border: 1px solid #000;">Dupla</th>
                        <th style="border: 1px solid #000;">Kills</th>
                        <th style="border: 1px solid #000;">Pontos Totais</th> <!-- Adicionado para mostrar pontos totais -->
                    </tr>
                </thead>
                <tbody>
                    ${rodada.ranking.map(dupla => {
                        const posicao = dupla.posicao;
                        const kills = dupla.kills;
                        const pontosColocacao = calcularPontosPorColocacao(posicao); // Calcula os pontos da colocação
                        const totalPontos = (kills || 0) + pontosColocacao; // Total de pontos
                        return `
                            <tr>
                                <td style="border: 1px solid #000;">${posicao}</td>
                                <td style="border: 1px solid #000;">${dupla.dupla}</td>
                                <td style="border: 1px solid #000;">${kills}</td>
                                <td style="border: 1px solid #000;">${totalPontos}</td> <!-- Exibe total de pontos -->
                            </tr>
                        `;
                    }).join('')}
                </tbody>
            `;
            divRodada.appendChild(table);
            tabelaRodadas.appendChild(divRodada);

            // Atualiza os estados dos botões
            document.getElementById("btnAnterior").disabled = index === 0;
            document.getElementById("btnProximo").disabled = index === rodadasData.length - 1;
        }

        // Adiciona eventos aos botões
        document.getElementById("btnAnterior").addEventListener("click", function () {
            if (rodadaAtual > 0) {
                rodadaAtual--;
                mostrarRodada(rodadaAtual);
            }
        });

        document.getElementById("btnProximo").addEventListener("click", function () {
            if (rodadaAtual < rodadasData.length - 1) {
                rodadaAtual++;
                mostrarRodada(rodadaAtual);
            }
        });

    </script>
</body>
</html>
